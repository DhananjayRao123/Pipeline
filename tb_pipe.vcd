$date
	Fri Apr 26 04:16:05 2024
$end
$version
	Icarus Verilog
$end
$timescale
	1s
$end
$scope module tb $end
$var reg 1 ! clk $end
$var reg 1 " rst_n $end
$scope module DUT $end
$var wire 1 ! clk $end
$var wire 1 " rst_n $end
$var wire 1 # stall $end
$var wire 32 $ snex [31:0] $end
$var wire 32 % instr_out [31:0] $end
$var wire 32 & instr [31:0] $end
$var wire 32 ' ex [31:0] $end
$var wire 5 ( destination [4:0] $end
$var wire 9 ) control_signals_1 [8:0] $end
$var wire 1 * PC_write $end
$var wire 32 + MemOut [31:0] $end
$var wire 1 , IF_ID_Write $end
$var wire 32 - Fwd_mem [31:0] $end
$var wire 32 . B [31:0] $end
$var wire 2 / ALU_SrcB_fwd [1:0] $end
$var wire 2 0 ALU_SrcA_fwd [1:0] $end
$var wire 32 1 ALU_Out [31:0] $end
$var wire 32 2 A [31:0] $end
$var reg 73 3 EX_MEM [72:0] $end
$var reg 169 4 ID_EX [168:0] $end
$var reg 32 5 IF_ID [31:0] $end
$var reg 71 6 MEM_WB [70:0] $end
$scope module H1 $end
$var wire 1 7 MemRead_ID_EX $end
$var wire 5 8 rs_IF_ID [4:0] $end
$var wire 5 9 rt_ID_EX [4:0] $end
$var wire 5 : rt_IF_ID [4:0] $end
$var wire 1 # stall $end
$var wire 1 * PC_write $end
$var wire 1 , IF_ID_Write $end
$upscope $end
$scope module Stage4 $end
$var wire 1 ; MemRead $end
$var wire 1 < MemWrite $end
$var wire 32 = data [31:0] $end
$var wire 32 > data_address [31:0] $end
$var reg 32 ? MemOut [31:0] $end
$upscope $end
$scope module f $end
$var wire 1 @ RegWrite_EX_MEM $end
$var wire 1 A RegWrite_MEM_WB $end
$var wire 5 B rd_EX_MEM [4:0] $end
$var wire 5 C rd_MEM_WB [4:0] $end
$var wire 5 D rs_ID_EX [4:0] $end
$var wire 5 E rt_ID_EX [4:0] $end
$var wire 2 F ALU_SrcB_fwd [1:0] $end
$var wire 2 G ALU_SrcA_fwd [1:0] $end
$upscope $end
$scope module stage1 $end
$var wire 1 * PC_write $end
$var wire 1 ! clk $end
$var wire 1 " rst_n $end
$var wire 32 H PC_next [31:0] $end
$var reg 32 I PC [31:0] $end
$var reg 32 J PC_inc [31:0] $end
$var reg 32 K instr [31:0] $end
$upscope $end
$scope module stage2 $end
$var wire 32 L IF_ID [31:0] $end
$var wire 1 ! clk $end
$var wire 32 M instr_out [31:0] $end
$var wire 5 N rd_old [4:0] $end
$var wire 1 O reg_write_old $end
$var wire 1 # stall $end
$var wire 32 P write_data [31:0] $end
$var wire 32 Q snex [31:0] $end
$var wire 32 R ex [31:0] $end
$var wire 9 S control_signals [8:0] $end
$var wire 1 T RegWrite $end
$var wire 1 U RegDst $end
$var wire 1 V MemtoReg $end
$var wire 1 W MemWrite $end
$var wire 1 X MemRead $end
$var wire 32 Y B [31:0] $end
$var wire 2 Z ALUSrcB [1:0] $end
$var wire 2 [ ALUOp [1:0] $end
$var wire 32 \ A [31:0] $end
$var parameter 32 ] amt $end
$scope module C $end
$var wire 6 ^ opcode [5:0] $end
$var reg 2 _ ALUOp [1:0] $end
$var reg 2 ` ALUSrcB [1:0] $end
$var reg 1 X MemRead $end
$var reg 1 W MemWrite $end
$var reg 1 V MemtoReg $end
$var reg 1 U RegDst $end
$var reg 1 T RegWrite $end
$upscope $end
$scope module R $end
$var wire 1 ! clk $end
$var wire 5 a rd [4:0] $end
$var wire 1 O reg_write $end
$var wire 5 b rs [4:0] $end
$var wire 5 c rt [4:0] $end
$var wire 32 d write_data [31:0] $end
$var reg 32 e A [31:0] $end
$var reg 32 f B [31:0] $end
$upscope $end
$upscope $end
$scope module stage3 $end
$var wire 32 g A [31:0] $end
$var wire 2 h ALUOp [1:0] $end
$var wire 2 i ALU_SrcA_fwd [1:0] $end
$var wire 2 j ALU_SrcB_ctrl [1:0] $end
$var wire 2 k ALU_SrcB_fwd [1:0] $end
$var wire 32 l B [31:0] $end
$var wire 6 m F [5:0] $end
$var wire 32 n Fwd_mem [31:0] $end
$var wire 32 o Fwd_wb [31:0] $end
$var wire 32 p ex [31:0] $end
$var wire 32 q snex [31:0] $end
$var wire 1 r Zero $end
$var wire 32 s ALU_Out [31:0] $end
$var reg 32 t ALU_Op1 [31:0] $end
$var reg 32 u ALU_Op2 [31:0] $end
$var reg 32 v MUX_temp [31:0] $end
$scope module ALU $end
$var wire 2 w ALUOp [1:0] $end
$var wire 6 x F [5:0] $end
$var wire 32 y in_1 [31:0] $end
$var wire 32 z in_2 [31:0] $end
$var wire 4 { op [3:0] $end
$var wire 1 r Zero $end
$var wire 32 | ALUOut [31:0] $end
$scope module A1 $end
$var wire 2 } ALUOp [1:0] $end
$var wire 6 ~ F [5:0] $end
$var reg 4 !" Operation [3:0] $end
$upscope $end
$scope module A2 $end
$var wire 4 "" ctrl [3:0] $end
$var wire 32 #" in_1 [31:0] $end
$var wire 32 $" in_2 [31:0] $end
$var reg 32 %" result [31:0] $end
$var reg 1 r zero $end
$upscope $end
$upscope $end
$upscope $end
$upscope $end
$upscope $end
$enddefinitions $end
$comment Show the parameter values. $end
$dumpall
b10000 ]
$end
#0
$dumpvars
b0 %"
b0 $"
b0 #"
b10 ""
b10 !"
b0 ~
b10 }
b0 |
b10 {
b0 z
b0 y
b0 x
b10 w
b0 v
b0 u
b0 t
b0 s
1r
b0 q
b0 p
b0 o
b0 n
b0 m
b0 l
b0 k
b0 j
b0 i
b10 h
b0 g
b0 f
b0 e
b0 d
b0 c
b0 b
b0 a
b0 `
b10 _
b0 ^
b0 \
b10 [
b0 Z
b0 Y
0X
0W
0V
1U
1T
b110000010 S
b0 R
b0 Q
b0 P
0O
b0 N
b0 M
b0 L
b1000010000010000000000000010 K
b100 J
b0 I
b100 H
b0 G
b0 F
b0 E
b0 D
b0 C
b0 B
0A
0@
b0 ?
b0 >
b0 =
0<
0;
b0 :
b0 9
b0 8
07
b0 6
b0 5
b0 4
b0 3
b0 2
b0 1
b0 0
b0 /
b0 .
b0 -
1,
b0 +
1*
b110000010 )
b0 (
b0 '
b1000010000010000000000000010 &
b0 %
b0 $
0#
0"
0!
$end
#5
1!
#7
1"
#10
0!
#15
b0 h
b0 w
b0 }
b101011 )
b101011 S
1V
1X
b10 Z
b10 `
b0 [
b0 _
0U
b1 .
b1 Y
b1 f
b110 2
b110 \
b110 e
b1000 H
b1000010011000000000010 &
b1000010011000000000010 K
b10 8
b1 :
b10 $
b10 Q
b10 '
b10 R
b10 ^
b10 b
b1 c
b1000 J
b100 I
b110000010 4
b1000010000010000000000000010 %
b1000010000010000000000000010 M
b1000010000010000000000000010 5
b1000010000010000000000000010 L
1!
#20
0!
#25
0*
0,
1#
b10 {
b10 !"
b10 ""
b0 h
b0 w
b0 }
0r
b1000 1
b1000 s
b1000 |
b1000 %"
b10 u
b10 z
b10 $"
b0 )
b0 S
b110 t
b110 y
b110 #"
b10 v
b1 (
0V
0X
b0 Z
b0 `
b10 [
b10 _
1U
b1 2
b1 \
b1 e
1@
b1 9
17
b10 D
b1 E
b110 g
b1 l
b10 m
b10 x
b10 ~
b10 q
b10 p
b10 j
b1 8
b11000000000010 $
b11000000000010 Q
b11000000000010 '
b11000000000010 R
b0 ^
b1 b
b1000 H
b1100001001100000000000000010 &
b1100001001100000000000000010 K
b10 3
b100001000001000000000000001000000000000000000000000000000010000000000000000000000000000000100000000000000000000000000000011000000000000000000000000000000001000101011 4
b1000010011000000000010 %
b1000010011000000000010 M
b1000010011000000000010 5
b1000010011000000000010 L
b1100 J
b1000 I
1!
#30
0!
#35
1r
b1100 H
b110 {
b110 !"
b110 ""
1*
1,
b10 h
b10 w
b10 }
b110000010 )
b110000010 S
0#
b10 0
b10 G
b10 i
b10 /
b10 F
b10 k
b0 1
b0 s
b0 |
b0 %"
b1000 u
b1000 z
b1000 $"
b1001 +
b1001 ?
b1000 t
b1000 y
b1000 #"
b1 v
1A
1O
b1 B
b1000 o
b1000 >
b1 =
1;
07
b1 D
b1 g
b11000000000010 q
b11000000000010 p
b0 j
b10 6
b100001000000000000000000000000000010001011 3
b100001001100000000001000000000000000000011000000000010000000000000000000110000000000100000000000000000000000000000000100000000000000000000000000000001000000000 4
1!
#40
0!
#45
0r
b10010 1
b10010 s
b10010 |
b10010 %"
b10 {
b10 !"
b10 ""
b0 h
b0 w
b0 }
b1 0
b1 G
b1 i
b1 /
b1 F
b1 k
b100100 )
b100100 S
b1001 -
b1001 P
b1001 d
b1001 n
b1001 u
b1001 z
b1001 $"
b1001 t
b1001 y
b1001 #"
b0 +
b0 ?
b110 (
0T
1W
b10 Z
b10 `
b0 [
b0 _
0U
b0 .
b0 Y
b0 f
b1 C
b1 N
b1 a
0@
b0 o
b0 >
0;
b110 :
b10 $
b10 Q
b10 '
b10 R
b11 ^
b110 c
b10000 H
b111001100100000000000000 &
b111001100100000000000000 K
b1000000000000000000000000000010000000000000000000000000000000100111 6
b100001000000000000000000000000000000000000 3
b100001001100000000001000000000000000000011000000000010000000000000000000110000000000100000000000000000000000000000000100000000000000000000000000000001110000010 4
b1100001001100000000000000010 %
b1100001001100000000000000010 M
b1100001001100000000000000010 5
b1100001001100000000000000010 L
b10000 J
b1100 I
1!
#50
b1001 2
b1001 \
b1001 e
0!
#55
b11111111111111111111111111110111 1
b11111111111111111111111111110111 s
b11111111111111111111111111110111 |
b11111111111111111111111111110111 %"
b110 {
b110 !"
b110 ""
b0 0
b0 G
b0 i
b10 h
b10 w
b10 }
b10010 u
b10010 z
b10010 $"
b1001 t
b1001 y
b1001 #"
b10 /
b10 F
b10 k
b110000010 )
b110000010 S
b0 -
b0 P
b0 d
b0 n
b10 v
1T
0W
b0 Z
b0 `
b10 [
b10 _
1U
b10010110010011011010 2
b10010110010011011010 \
b10010110010011011010 e
b10100 H
b101010010010000000000010110 &
b101010010010000000000010110 K
0A
0O
b110 B
1@
b10010 o
b10010 >
b110 9
b110 E
b1001 g
b0 l
b10 q
b10 p
b10 j
b111 8
b100000000000000 $
b100000000000000 Q
b100000000000000 '
b100000000000000 R
b0 ^
b111 b
b10100 J
b10000 I
b1000000000000000000000000000000000000000000000000000000000000000000 6
b100110000000000000000000000000000100100010 3
b110000100110000000000000001000000000000000000000000000000010000000000000000000000000000000100000000000000000000000000000100100000000000000000000000000000000000100100 4
b111001100100000000000000 %
b111001100100000000000000 M
b111001100100000000000000 5
b111001100100000000000000 L
1!
#60
0!
#65
b11 h
b11 w
b11 }
b1 /
b1 F
b1 k
b10010110010011011010 1
b10010110010011011010 s
b10010110010011011010 |
b10010110010011011010 %"
b11010010 )
b11010010 S
b10010 -
b10010 P
b10010 d
b10010 n
b10010 u
b10010 z
b10010 $"
b10010110010011011010 t
b10010110010011011010 y
b10010110010011011010 #"
b1 {
b1 !"
b1 ""
b0 v
b1000 (
b1 Z
b1 `
b11 [
b11 _
0U
b10010001100001011 2
b10010001100001011 \
b10010001100001011 e
b110 C
1A
b110 N
b110 a
1O
0@
b11111111111111111111111111110111 o
b11111111111111111111111111110111 >
b0 =
1<
b111 D
b10010110010011011010 g
b0 m
b0 x
b0 ~
b100000000000000 q
b100000000000000 p
b0 j
b1010 8
b1001 :
b10110 $
b10110 Q
b10110 '
b10110 R
b1 ^
b1010 b
b1001 c
b11000 H
bx &
bx K
b110000000000000000000000000000100100000000000000000000000000000000010 6
b110111111111111111111111111111101110100 3
b11100110010000000000000000000000000000000100000000000000000000000000000001000000000000000000000000001001011001001101101000000000000000000000000000000000110000010 4
b101010010010000000000010110 %
b101010010010000000000010110 M
b101010010010000000000010110 5
b101010010010000000000010110 L
b11000 J
b10100 I
1!
#70
0!
#75
b0 /
b0 F
b0 k
b0 h
b0 w
b0 }
b10110 u
b10110 z
b10110 $"
b10010001100100001 1
b10010001100100001 s
b10010001100100001 |
b10010001100100001 %"
b0 )
b0 S
b11111111111111111111111111110111 -
b11111111111111111111111111110111 P
b11111111111111111111111111110111 d
b11111111111111111111111111110111 n
b10010001100001011 t
b10010001100001011 y
b10010001100001011 #"
b10 {
b10 !"
b10 ""
b10110 v
b1001 (
0T
b0 Z
b0 `
b0 [
b0 _
bx .
bx Y
bx f
bx 2
bx \
bx e
b11100 H
0A
0O
b1000 B
1@
b10010110010011011010 o
b10010110010011011010 >
0<
b1001 9
b1010 D
b1001 E
b10010001100001011 g
b10110 m
b10110 x
b10110 ~
b10110 q
b10110 p
b1 j
bx 8
bx :
bx $
bx Q
b0xxxxxxxxxxxxxxxx '
b0xxxxxxxxxxxxxxxx R
bx ^
bx b
bx c
b11100 J
b11000 I
b110111111111111111111111111111101110000000000000000000000000000000000 6
b1000000000000000100101100100110110100010 3
b10101001001000000000001011000000000000000000000000000010110000000000000000000000000000101100000000000000001001000110000101100000000000000000000000000000000011010010 4
bx %
bx M
bx 5
bx L
1!
#80
0!
#85
bx 0
bx G
bx i
bx /
bx F
bx k
bx 1
bx s
bx |
bx %"
b10010110010011011010 -
b10010110010011011010 P
b10010110010011011010 d
b10010110010011011010 n
bx u
bx z
bx $"
bx t
bx y
bx #"
bx v
bx (
b1000 C
1A
b1000 N
b1000 a
1O
b1001 B
b10010001100100001 o
b10010001100100001 >
bx 9
bx D
bx E
bx g
bx l
bx m
bx x
bx ~
bx q
bx p
b0 j
b100000 H
b1000000000000000100101100100110110100000000000000000000000000000000010 6
b1001000000000000000100100011001000010010 3
bx0000000000000000xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx000000000 4
b100000 J
b11100 I
1!
#90
0!
#95
b0x 0
b0x G
b0x i
b0x /
b0x F
b0x k
b10010001100100001 -
b10010001100100001 P
b10010001100100001 d
b10010001100100001 n
b100100 H
b1001 C
b1001 N
b1001 a
bx B
0@
bx o
bx >
bx =
b100100 J
b100000 I
b1001000000000000000100100011001000010000000000000000000000000000000010 6
bx0000 3
1!
#100
0!
#105
b0 0
b0 G
b0 i
b0 /
b0 F
b0 k
bx -
bx P
bx d
bx n
bx C
0A
bx N
bx a
0O
b101000 H
bx0000000000000000000000000000000000 6
b101000 J
b100100 I
1!
#107
